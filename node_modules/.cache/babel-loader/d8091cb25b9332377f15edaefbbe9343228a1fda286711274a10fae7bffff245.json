{"ast":null,"code":"var _jsxFileName = \"C:\\\\Physica Pdf maker\\\\pdf-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport PDFDocument from 'pdfkit';\nimport blobStream from 'blob-stream';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const generatePDF = () => {\n    const doc = new PDFDocument();\n    const stream = doc.pipe(blobStream());\n\n    // Add content to the PDF\n    doc.fontSize(25).text('Hello, this is a test PDF!', 100, 100);\n    doc.end();\n    stream.on('finish', () => {\n      const blob = stream.toBlob('application/pdf');\n      const url = stream.toBlobURL('application/pdf');\n\n      // Create an iframe and display the generated PDF\n      const iframe = document.createElement('iframe');\n      iframe.src = url;\n      iframe.width = '100%';\n      iframe.height = '500px';\n      document.body.appendChild(iframe);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generatePDF,\n      children: \"Generate PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","PDFDocument","blobStream","jsxDEV","_jsxDEV","App","generatePDF","doc","stream","pipe","fontSize","text","end","on","blob","toBlob","url","toBlobURL","iframe","document","createElement","src","width","height","body","appendChild","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Physica Pdf maker/pdf-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport PDFDocument from 'pdfkit';\nimport blobStream from 'blob-stream';\n\nfunction App() {\n  const generatePDF = () => {\n    const doc = new PDFDocument();\n    const stream = doc.pipe(blobStream());\n\n    // Add content to the PDF\n    doc.fontSize(25).text('Hello, this is a test PDF!', 100, 100);\n\n    doc.end();\n\n    stream.on('finish', () => {\n      const blob = stream.toBlob('application/pdf');\n      const url = stream.toBlobURL('application/pdf');\n\n      // Create an iframe and display the generated PDF\n      const iframe = document.createElement('iframe');\n      iframe.src = url;\n      iframe.width = '100%';\n      iframe.height = '500px';\n\n      document.body.appendChild(iframe);\n    });\n  };\n\n  return (\n    <div>\n      <button onClick={generatePDF}>Generate PDF</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,QAAQ;AAChC,OAAOC,UAAU,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG,IAAIN,WAAW,CAAC,CAAC;IAC7B,MAAMO,MAAM,GAAGD,GAAG,CAACE,IAAI,CAACP,UAAU,CAAC,CAAC,CAAC;;IAErC;IACAK,GAAG,CAACG,QAAQ,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,4BAA4B,EAAE,GAAG,EAAE,GAAG,CAAC;IAE7DJ,GAAG,CAACK,GAAG,CAAC,CAAC;IAETJ,MAAM,CAACK,EAAE,CAAC,QAAQ,EAAE,MAAM;MACxB,MAAMC,IAAI,GAAGN,MAAM,CAACO,MAAM,CAAC,iBAAiB,CAAC;MAC7C,MAAMC,GAAG,GAAGR,MAAM,CAACS,SAAS,CAAC,iBAAiB,CAAC;;MAE/C;MACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAGL,GAAG;MAChBE,MAAM,CAACI,KAAK,GAAG,MAAM;MACrBJ,MAAM,CAACK,MAAM,GAAG,OAAO;MAEvBJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EAED,oBACEd,OAAA;IAAAsB,QAAA,eACEtB,OAAA;MAAQuB,OAAO,EAAErB,WAAY;MAAAoB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACC,EAAA,GA7BQ3B,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}